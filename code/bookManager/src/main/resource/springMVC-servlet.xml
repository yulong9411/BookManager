<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-3.2.xsd
	"
	default-lazy-init="true">

	<!-- 注解驱动：注册DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter, 
		支持注解@Controller，数据绑定支持@NumberFormatannotation，@Valid等 先于 component-scan 之前 -->
	<mvc:annotation-driven />
	<!-- 扫描注解：扫描base-package中的存在@Component @Controller@Service等注解， 隐式地注册了注解解析器： 
		AutowiredAnnotationBeanPostProcessor、CommonAnnotationBeanPostProcessor 使用到其他注解 
		@Persistence、@Equired或其他自定义注解时，需要注册对应解析器 -->
	<context:component-scan base-package="com.cpf"> 
		 <context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	<!-- <context:component-scan base-package="cc.messcat.websocket" /> -->

	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	
	<!-- 编码处理 -->
	<bean id="stringConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	
	<!-- 输出对象转JSON支持 -->
	<!-- P.S. spring4.0只支持使用MappingJackson2HttpMessageConverter而不是MappingJacksonHttpMessageConverter -->
	<bean id="jsonConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<!-- 编码处理 -->
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 校验 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<!-- 文件上传处理 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="2097152" />

	</bean>

	<!-- 定义Spring MVC 的模板文件 -->
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="1" />
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" /> <!-- 支持JSTL -->
		<property name="prefix" value="/" /> <!-- 模板的路径 -->
		<property name="suffix" value=".jsp" /> <!-- 模板文件的后缀 -->
	</bean>

	<!-- 对静态资源文件的访问 不支持访问WEB-INF目录 -->
	<mvc:default-servlet-handler />

	<!-- 启用Spring MVC注解功能，完成请求及响应自动转换为JSON字符串 -->
	<!-- P.S. 这里使用了Spring3.1开始的更高级的RequestMappingHandlerAdapter来支持 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringConverter" />
				<ref bean="jsonConverter" />
			</list>
		</property>
	</bean>
	
	<!-- <mvc:interceptors>
            <mvc:interceptor> 
                  <mvc:mapping path="/wx/**"/>
                  <mvc:exclude-mapping path="/wx/login.html"/>
                  <mvc:exclude-mapping path="/wx/login_error.html"/>
                  <mvc:exclude-mapping path="/wx/images/**"/>
                  <mvc:exclude-mapping path="/wx/js/**"/>
                  <mvc:exclude-mapping path="/wx/css/**"/>
                  <bean  class="cc.messcat.filter.WxRequestFilter"></bean>
            </mvc:interceptor>
     </mvc:interceptors> -->

</beans>